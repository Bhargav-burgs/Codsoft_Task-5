# -*- coding: utf-8 -*-
"""Credit card fraud detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ur0vUQUBZIv1SI3axy6G8U-5vpDd58JN
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model  import LogisticRegression
from sklearn.metrics import accuracy_score,f1_score,recall_score,precision_score

ccdata=pd.read_csv('/content/creditcard.csv')
ccdata

ccdata.info()

ccdata.describe()

ccdata.isnull().sum()

"""Distribution of normal and fruad data"""

ccdata['Class'].value_counts()

normal=ccdata[ccdata.Class==0]
fraud=ccdata[ccdata.Class==1]

normal.shape

fraud.shape

normal.Amount.describe()

fraud.Amount.describe()

f,(ax1,ax2)=plt.subplots(2,1,sharex=True)
f.suptitle('Amount per transaction by Class')
bins=50
ax1.hist(fraud.Amount,bins=bins)
ax1.set_title('Fraud')
ax2.hist(normal.Amount,bins=bins)
ax2.set_title('Normal')
plt.xlabel('Amount')
plt.ylabel('No of transactions')
plt.xlim((0,20000))
plt.yscale('log')
plt.show()

normal_sample=normal.sample(n=492)

dataset=pd.concat([normal_sample,fraud],axis=0)
dataset

dataset.shape

"""Splitting into features and target"""

x=dataset.drop('Class',axis=1)
y=dataset['Class']

x

y

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,stratify=y,random_state=42)

print(x_train.shape,x_test.shape)

"""Logistic Regression Model"""

model=LogisticRegression()
model.fit(x_train,y_train)

y_pred=model.predict(x_test)

accuracy=accuracy_score(y_pred,y_test)
print('The Accuracy is:',accuracy)

precision=precision_score(y_pred,y_test)
print('The Precision is:',precision)

recall=recall_score(y_pred,y_test)
print('The Recall score is:',recall)

f1=f1_score(y_pred,y_test)
print('The F1 score is:',f1)

"""The Accuracy is : 95.93%

The Precision is : 96.93%

The F1 Score is : 95.95%

The Recall Score is : 95%
"""